// Autogenerated by Thrift Compiler (0.9.2)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package entry

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var GoUnusedProtection__ int

type ThriftPkg struct {
	Ret     int32  `thrift:"ret,1" json:"ret"`
	MainCmd int32  `thrift:"main_cmd,2" json:"main_cmd"`
	SubCmd  int32  `thrift:"sub_cmd,3" json:"sub_cmd"`
	BufData []byte `thrift:"buf_data,4" json:"buf_data"`
	StrData string `thrift:"str_data,5" json:"str_data"`
}

func NewThriftPkg() *ThriftPkg {
	return &ThriftPkg{}
}

func (p *ThriftPkg) GetRet() int32 {
	return p.Ret
}

func (p *ThriftPkg) GetMainCmd() int32 {
	return p.MainCmd
}

func (p *ThriftPkg) GetSubCmd() int32 {
	return p.SubCmd
}

func (p *ThriftPkg) GetBufData() []byte {
	return p.BufData
}

func (p *ThriftPkg) GetStrData() string {
	return p.StrData
}
func (p *ThriftPkg) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *ThriftPkg) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		p.Ret = v
	}
	return nil
}

func (p *ThriftPkg) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		p.MainCmd = v
	}
	return nil
}

func (p *ThriftPkg) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 3: %s", err)
	} else {
		p.SubCmd = v
	}
	return nil
}

func (p *ThriftPkg) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBinary(); err != nil {
		return fmt.Errorf("error reading field 4: %s", err)
	} else {
		p.BufData = v
	}
	return nil
}

func (p *ThriftPkg) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 5: %s", err)
	} else {
		p.StrData = v
	}
	return nil
}

func (p *ThriftPkg) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("ThriftPkg"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *ThriftPkg) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("ret", thrift.I32, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:ret: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.Ret)); err != nil {
		return fmt.Errorf("%T.ret (1) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:ret: %s", p, err)
	}
	return err
}

func (p *ThriftPkg) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("main_cmd", thrift.I32, 2); err != nil {
		return fmt.Errorf("%T write field begin error 2:main_cmd: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.MainCmd)); err != nil {
		return fmt.Errorf("%T.main_cmd (2) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 2:main_cmd: %s", p, err)
	}
	return err
}

func (p *ThriftPkg) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("sub_cmd", thrift.I32, 3); err != nil {
		return fmt.Errorf("%T write field begin error 3:sub_cmd: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.SubCmd)); err != nil {
		return fmt.Errorf("%T.sub_cmd (3) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 3:sub_cmd: %s", p, err)
	}
	return err
}

func (p *ThriftPkg) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("buf_data", thrift.STRING, 4); err != nil {
		return fmt.Errorf("%T write field begin error 4:buf_data: %s", p, err)
	}
	if err := oprot.WriteBinary(p.BufData); err != nil {
		return fmt.Errorf("%T.buf_data (4) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 4:buf_data: %s", p, err)
	}
	return err
}

func (p *ThriftPkg) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("str_data", thrift.STRING, 5); err != nil {
		return fmt.Errorf("%T write field begin error 5:str_data: %s", p, err)
	}
	if err := oprot.WriteString(string(p.StrData)); err != nil {
		return fmt.Errorf("%T.str_data (5) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 5:str_data: %s", p, err)
	}
	return err
}

func (p *ThriftPkg) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ThriftPkg(%+v)", *p)
}

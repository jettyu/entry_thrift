// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "entry_thrift_svr.h"
#include <iostream>
using namespace entry;
using namespace std;
class TestCmdHandler
{
public:
    TestCmdHandler(const entry::ThriftPkg& req,
                   entry::ThriftPkg& resp):req_(req), resp_(resp){}
    int Exec()
    {
        cout<<"main_cmd="<<req_.main_cmd<<endl;
        resp_.main_cmd = 100;
        resp_.data = string("\0 12345\05678", 12);
        cout<<"resp.data.len="<<resp_.data.length()<<endl;
        return 0;
    }
private:
    const entry::ThriftPkg& req_;
    entry::ThriftPkg& resp_;
};
class TestThriftCmdHandler : public EntryThriftCmdHandler
{
public:
    int Exec(const entry::ThriftPkg& req, entry::ThriftPkg& resp)
    {
        return TestCmdHandler(req, resp).Exec();
    }
};

int main()
{
    EntryThriftSvrManager manager;
    TestThriftCmdHandler h;
    manager.Start(9001, &h);
    return 0;
}
